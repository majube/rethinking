ylab="mean probability",
las=2,
cex.names=0.5,
density=c(15, 0))
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- bB*log_brain,
bB ~ dnorm(0, 0.5)
), data=d, cores=4, chains=4
)
precis(mH6_a)
data(Primates301)
d <- Primates301
d$log_brain <- log(d$brain)
d_complete <- d[complete.cases(d$log_brain, d$social_learning), colnames(d)]
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- bB*log_brain,
bB ~ dnorm(0, 0.5)
), data=d, cores=4, chains=4
)
precis(mH6_a)
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- bB*log_brain,
bB ~ dnorm(0, 0.5)
), data=d_complete, cores=4, chains=4
)
precis(mH6_a)
dat_list <- list(social_learning=d_complete$social_learning, log_brain=d_complete$log_brain)
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- a + bB*log_brain,
a ~ dnorm()
bB ~ dnorm(0, 0.5)
), data=dat_list, cores=4, chains=4
)
precis(mH6_a)
dat_list <- list(social_learning=d_complete$social_learning, log_brain=d_complete$log_brain)
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- a + bB*log_brain,
a ~ dnorm(0, 1),
bB ~ dnorm(0, 0.5)
), data=dat_list, cores=4, chains=4
)
precis(mH6_a)
precis(mH6_a)
rbernoulle(1e3, 0.5)
rbernoulli(1e3, 0.5)
rbinom(1e3, 0.5)
args(rbinom)
g <- rbinom(1000, 1, 0.5) + 1
g
N <- 1e3
G <- rbinom(N, 1, 0.5) + 1 # simulated gender 50/50 male female
D <- rbinom(N, 1, 0.3) + 1 # simulated two disciplines 30/70
S <- rbinom(N, 1, 0.2) + 1 # simulated two career stages 20/80
A <- rbinom(N, 1, 0.1 + 0*G + ifelse(D==1, 0.2, 0.3) + ifelse(S==1, 0.1, -0.1))
sim_data <- list(G=G, D=D, S=S, A=A)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + g[G] + d[D],
a ~ dnorm(0, 0.5),
c(g, d) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
G <- rbinom(N, 1, 0.5) + 1 # simulated gender 50/50 male female
D <- rbinom(N, 1, 0.3) + 1 # simulated two disciplines 30/70
S <- rbinom(N, 1, 0.2) + 1 # simulated two career stages 20/80
A <- rbinom(N, 1, 0.1 + 0*G + ifelse(D==1, 0.2, 0.3) + ifelse(S==1, 0.1, -0.1))
sim_data <- list(G=G, D=D, S=S, A=A)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + delta[D] + gamma[G],
a ~ dnorm(0, 0.5),
c(g, d) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
alpha ~ dnorm(0, 0.5),
c(gamma, delta) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
alpha ~ dnorm(0, 0.5),
c(gamma, delta) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
View(sim_data)
?astype
?as.type
?as.integer
N <- 1e3
G <- as.integer(rbinom(N, 1, 0.5) + 1) # simulated gender 50/50 male female
D <- as.integer(rbinom(N, 1, 0.3) + 1) # simulated two disciplines 30/70
S <- as.integer(rbinom(N, 1, 0.2) + 1) # simulated two career stages 20/80
A <- as.integer(rbinom(N, 1, 0.1 + 0*G + ifelse(D==1, 0.2, 0.3) + ifelse(S==1, 0.1, -0.1)))
sim_data <- list(G=G, D=D, S=S, A=A)
View(sim_data)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
alpha ~ dnorm(0, 0.5),
c(gamma, delta) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
G <- as.integer(rbinom(N, 1, 0.5) + 1) # simulated gender 50/50 male female
D <- as.integer(rbinom(N, 1, 0.3) + 1) # simulated two disciplines 30/70
S <- as.integer(rbinom(N, 1, 0.2) + 1) # simulated two career stages 20/80
A <- as.integer(rbinom(N, 1, 0.1 + 0*G + ifelse(D==1, 0.2, 0.3) + ifelse(S==1, 0.1, -0.1)))
sim_data <- data.frame(G=G, D=D, S=S, A=A)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
alpha ~ dnorm(0, 0.5),
c(gamma, delta) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
G <- as.integer(rbinom(N, 1, 0.5) ) # simulated gender 50/50 male female
D <- as.integer(rbinom(N, 1, 0.3) ) # simulated two disciplines 30/70
S <- as.integer(rbinom(N, 1, 0.2) ) # simulated two career stages 20/80
A <- as.integer(rbinom(N, 1, 0.1 + 0*G + ifelse(D==1, 0.2, 0.3) + ifelse(S==1, 0.1, -0.1)))
sim_data <- list(G=G, D=D, S=S, A=A)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
alpha ~ dnorm(0, 0.5),
c(gamma, delta) ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
a ~ dnorm(0, 0.2),
gamma  ~ dnorm(0, 0.2),
delta ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
C:/Users/mjbea/AppData/Local/Temp/RtmpaIew2G/model-38fc3154967.stan
dat_list <- list(
gid = ifelse(NWOGrants$gender=="m", 1, 2),
disc_id = rep(1:9, each=2),
awards = NWOGrants$awards,
applications = NWOGrants$applications
)
View(dat_list)
View(sim_data)
N <- 1e3
G <- as.integer(rbinom(N, 1, 0.5) + 1) # simulated gender 50/50 male female
S <- as.integer(rbinom(N, 1, 0.2) + 1) # simulated two career stages 20/80
D <- as.integer(rbinom(N, 1, inv_logit(2*G + 1*S)) + 1) # simulated two disciplines 30/70
A <- as.integer(rbinom(N, 1, inv_logit(1 + 0*G + ifelse(D==1, -0.3, 0.3) + ifelse(S==1, 0.1, -0.1))))
sim_data <- list(G=G, D=D, S=S, A=A)
N <- 1e3
G <- as.integer(rbinom(N, 1, 0.5) + 1) # simulated gender 50/50 male female
S <- as.integer(rbinom(N, 1, 0.2) + 1) # simulated two career stages 20/80
D <- as.integer(rbinom(N, 1, inv_logit(2*G + 1*S)) + 1) # simulated two disciplines 30/70
A <- as.integer(rbinom(N, 1, inv_logit(1 + 0*G + ifelse(D==1, -0.3, 0.3) + ifelse(S==1, 0.1, -0.1))))
sim_data <- list(G=G, D=D, S=S, A=A)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
a ~ dnorm(0, 0.2),
gamma  ~ dnorm(0, 0.2),
delta ~ dnorm(0, 0.2)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
G <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
S <- as.integer(rbern(N, 0.2) + 1) # simulated two career stages 20/80
D <- as.integer(rbern(N, inv_logit(2*G + 1*S)) + 1) # simulated two disciplines 30/70
A <- as.integer(rbern(N, inv_logit(1 + 0*G + ifelse(D==1, -0.3, 0.3) + ifelse(S==1, 0.1, -0.1))))
sim_data <- list(G=G, D=D, S=S, A=A)
mH5 <- ulam(
alist(
A ~ bernoulli(p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma, delta) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbernoulli(p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma, delta) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
?bernoulli
bern
?dbern
dbern
mH5 <- ulam(
alist(
A ~ dbern(p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma, delta) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
?ulam
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma, delta) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- gamma[G],
gamma[G] ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
rm(list=ls())
library(rethinking)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1), # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1), # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1), # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*G + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(
G=g
S=s
D=d
A=a
)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*G + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(G=g, S=s, D=d, A=a)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(G=g, S=s, D=d, A=a)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
rm(list=ls())
library(rethinking)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(G=g, S=s, D=d, A=a)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- a + gamma[G] + delta[D],
c(a, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
c(alpha, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
library(rethinking)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(rethinking)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(G=g, S=s, D=d, A=a)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
c(alpha, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list("G"=g, "S"=s, "D"=d, "A"=a)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha + gamma[G] + delta[D],
c(alpha, gamma[G], delta[D]) ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
gid <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
sid <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
did <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(G=gid, S=sid, D=did, A=a)
mH5 <- ulam(
alist(
A ~ dbinom(1, p),
logit(p) <- alpha,
alpha ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.4) + 1) # simulated two career stages 40/60
d <- as.integer(rbern(N, inv_logit(1 + 0.2*g - 0.3*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1))))
sim_data <- list(gender=g,disc=d, award=a)
mH5 <- ulam(
alist(
award ~ dbinom(1, p),
logit(p) <- alpha,
alpha ~ dnorm(0, 0.2),
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
award ~ dbinom(1, p),
logit(p) <- 1,
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
mH5 <- ulam(
alist(
award ~ dbinom(1, p),
logit(p) <- 1,
), data=sim_data, chains=4, cores=4
)
mH5 <- ulam(
alist(
award ~ dbinom(1, p),
logit(p) <- gamma[gender],
gamma[gender] ~ dnorm(0, 0.5)
), data=sim_data, chains=4, cores=4
)
mH5 <- ulam(
alist(
award ~ dbinom(1, p),
logit(p) <- alpha + gamma[gender] + delta[disc],
alpha ~ dnorm(0, 0.5),
delta[disc] ~ dnorm(0, 0.5),
gamma[gender] ~ dnorm(0, 0.5)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
post <- extract.samples(mH5)
post
View(post)
dens(post$gamma[, 1])
dens(post$gamma[, 1], lt="dashed", add=TRUE)
dens(post$gamma[, 2], lt="dashed", add=TRUE)
post <- extract.samples(mH5)
diff_p <- inv_logit(post$gamma[, 2] - post$gamma[, 1])
dens(diff_p)
diff_p
post <- extract.samples(mH5)
diff_p <- inv_logit(post$gamma[, 2]) - inv_logit(post$gamma[, 1])
dens(diff_p)
post <- extract.samples(mH5)
diff_p <- inv_logit(post$gamma[, 2]) - inv_logit(post$gamma[, 1])
mean(diff_p)
dens(diff_p)
inv_logit(1)
inv_logit(0)
inv_logit(0.4)
inv_logit(0.1)
inv_logit(-1)
N <- 1e3
g <- as.integer(rbern(N, 0.5) + 1) # simulated gender 50/50 male female
s <- as.integer(rbern(N, 0.2) + 1) # simulated two career stages 20/80
d <- as.integer(rbern(N, inv_logit(0.2*g - 0.2*s)) + 1) # simulated two disciplines based on g and s
a <- as.integer(rbern(N, inv_logit(-1 + 0*g + ifelse(d==1, -0.3, 0.3) + ifelse(s==1, 0.1, -0.1)))) # simulated award based on S and D
sim_data <- list(gender=g, disc=d, award=a)
mH5 <- ulam(
alist(
award ~ dbinom(1, p),
logit(p) <- alpha + gamma[gender] + delta[disc],
alpha ~ dnorm(0, 0.5),
delta[disc] ~ dnorm(0, 0.5),
gamma[gender] ~ dnorm(0, 0.5)
), data=sim_data, chains=4, cores=4
)
precis(mH5, depth=2)
dat_list <- list(social_learning=d_complete$social_learning, log_brain=d_complete$log_brain)
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- a + bB*log_brain,
a ~ dnorm(0, 1),
bB ~ dnorm(0, 0.5)
), data=dat_list, cores=4, chains=4
)
precis(mH6_a)
data(Primates301)
d <- Primates301
d$log_brain <- log(d$brain)
d_complete <- d[complete.cases(d$log_brain, d$social_learning), colnames(d)]
dat_list <- list(social_learning=d_complete$social_learning, log_brain=d_complete$log_brain)
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
logit(lambda) <- a + bB*log_brain,
a ~ dnorm(0, 1),
bB ~ dnorm(0, 0.5)
), data=dat_list, cores=4, chains=4
)
precis(mH6_a)
dat_list <- list(social_learning=d_complete$social_learning, log_brain=d_complete$log_brain)
mH6_a <- ulam(
alist(
social_learning ~ dpois(lambda),
log(lambda) <- a + bB*log_brain,
a ~ dnorm(0, 1),
bB ~ dnorm(0, 0.5)
), data=dat_list, cores=4, chains=4
)
precis(mH6_a)
precis(mH6_a)
precis(mH6_a)$mean
precis(mH6_a)$mean[1]
exp(precis(mH6_a)$mean[1])
mean_params <- precis(mH6_a)$mean
mean_params <- precis(mH6_a)$mean
exp(mean_params[1]+10*mean_params[2])
exp(mean_params[1]+1*mean_params[2])
exp(mean_params[1])+exp(mean_params[2])
exp(mean_params[1])*exp(mean_params[2])
exp(1)
mean_params[2]
exp(mean_params[2])
```{r warning=FALSE, message=FALSE}
