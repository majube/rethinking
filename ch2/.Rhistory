#4.1 normal through addition
pos <- replicate(1e3, sum(runif(16, min=-1, max=1)))
hist(pos)
plot(density(pos)) #approximately normal
#4.1 normal through addition
pos <- replicate(1e4, sum(runif(16, min=-1, max=1)))
hist(pos)
plot(density(pos)) #approximately normal
#4.2 multiply 1 + 12 random values from unif(0, 0.1)
prod(1 + runif(12, min=0, max=0.1))
#4.3 normal through multiplication
growth <- replicate(1e4, prod(1 + runif(12, min=0, max=0.1)))
hist(growth)
plot(density(growth))
library(rethinking)
dens(growth, norm.comp=TRUE) #approximately normal
#4.4
big <- replicate(1e4, prod(1 + runif(12, min=0, max=0.5)))
dens(big, norm.comp=TRUE) #bigger multiplications not normal
small <- replicate(1e4, prod(1 + runif(12, min=0, max=0.1)))
dens(small, norm.comp=TRUE) #smaller are normal
#4.5 log-multiplication is normal
log.big <- replicate(1e4, log(prod(1 + runif(12, min=0, max=0.5))))
dens(log.big, norm.comp=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(rethinking)
#plot raw data
plot(height ~ weight, data=young, col=rangi2)
rm(list=ls())
data(Howell1)
d <- Howell1
young <- d[d$age < 18, ]
dim(young)
#avg weight
weight_bar <- mean(young$weight)
#model
m_young <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight - weight_bar),
a ~ dnorm(60, 10),
b ~ dlnorm(0, 1),
sigma ~ dexp(1)
), data=young
)
#estimated parameters
precis(m_young)
b_mean <- precis(m_young)$mean[2]
10*b_mean
#plot raw data
plot(height ~ weight, data=young, col=rangi2)
#create weight sequence
weight.seq <- seq(from=min(young$weight), to=max(young$weight), by=1)
#calculate and plot MAP regression line
mu <- link(m_young, data=list(weight=weight.seq))
mu.mean <- apply(mu, 2, mean)
lines(weight.seq, mu.mean)
#calculate and shade 89% probability interval for the mean mu
mu.PI <- apply(mu, 2, PI, prob=0.89)
shade(mu.PI, weight.seq)
#simulate and shade predicted heights
sim.height <- sim(m_young, data=list(weight=weight.seq))
height.PI <- apply(sim.height, 2, PI, prob=0.89)
shade(height.PI, weight.seq)
unlink("C:/Users/mjbea/rethinking/ch4/ex4_cache", recursive = TRUE)
plot(pexp(rate=8))
plot(8, pexp(rate=1))
plot(pexp(8, rate=1))
args(seq)
?seq
?quap
knitr::opts_chunk$set(
echo = TRUE,
error = TRUE
)
library(rethinking)
m4.3_new <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*weight,
a ~ dnorm(178, 20),
b ~ dlnorm(0, 1),
sigma ~ dunif(0, 50)
),
data=d2, start=list(a=178, b=1, sigma=10)
)
precis(m4.3_new)
data("WaffleDivorce")
View(WaffleDivorce)
knitr::opts_chunk$set(
echo = TRUE,
error = TRUE
)
library(rethinking)
dag <- dagitty("dag{S -> M; S -> A; M -> A; M -> D}")
#coordinates(dag) <- list(x=c(), y=c())
drawdag(dag)
library(dagitty)
dag <- dagitty("dag{S -> M; S -> A; M -> A; M -> D}")
#coordinates(dag) <- list(x=c(), y=c())
drawdag(dag)
dag <- dagitty("dag{S -> M; S -> A; M -> A; M -> D}")
#coordinates(dag) <- list(x=c(S=1, A=0, M=1, D=2), y=c(S=-1, A=0, M=0, D=0))
drawdag(dag)
dag <- dagitty("dag{S -> M; S -> A; M -> A; M -> D}")
coordinates(dag) <- list(x=c(S=1, A=0, M=1, D=2), y=c(S=-1, A=0, M=0, D=0))
drawdag(dag)
dag <- dagitty("dag{S -> M; S -> A; A -> M; M -> D}")
coordinates(dag) <- list(x=c(S=1, A=0, M=1, D=2), y=c(S=-1, A=0, M=0, D=0))
drawdag(dag)
dag <- dagitty("dag{S -> M; S -> A; A -> M; M -> D; S -> D}")
coordinates(dag) <- list(x=c(S=1, A=0, M=1, D=2), y=c(S=-1, A=0, M=0, D=0))
drawdag(dag)
impliedConditionalIndependencies(dag)
"TX" in c("TX", "AL")
"TX" %in% c("TX", "AL")
rm(list=ls())
library(rethinking)
data("WaffleDivorce")
d <- WaffleDivorce
d$D <- standardize(d$Divorce)
d$M <- standardize(d$Marriage)
d$A <- standardize(d$MedianAgeMarriage)
d$S <- ifelse(d$Loc %in% c("AL", "AR", "FL", "GA", "KS", "KY", "LA", "MS", "MO", "NC", "SC", "TN", "TX", "VA"), 1, 0)
View(d)
mH4 <- quap(
alist(
D ~ dnorm(mu, sigma),
mu <- a + bA*A + bM*M + bS*S,
a ~ dnorm(0, 0.2),
c(bA, bM, bS) ~ dnorm(0, 0.5),
sigma ~ dexp(1)
), data=d
)
precis(mH4)
dag <- dagitty("dag{S -> M; S -> A; A -> M; M -> D; S -> D; A -> D}")
coordinates(dag) <- list(x=c(S=1, A=0, M=1, D=2), y=c(S=-1, A=0, M=-0.5, D=0))
drawdag(dag)
impliedConditionalIndependencies(dag)
dag2 <- dagitty("dag{S -> M; S -> A; A -> M; M -> D; S -> D; A -> D}")
coordinates(dag2) <- list(x=c(S=0, A=0, M=1, D=2), y=c(S=-1, A=0, M=-0.5, D=0))
drawdag(dag2)
dag2 <- dagitty("dag{S -> M; S -> A; A -> M; M -> D; A -> D}")
coordinates(dag2) <- list(x=c(S=0, A=0, M=1, D=2), y=c(S=-1, A=0, M=-0.5, D=0))
drawdag(dag2)
impliedConditionalIndependencies(dag2)
rm(list=ls())
library(rethinking)
data("WaffleDivorce")
d <- WaffleDivorce
d$D <- standardize(d$Divorce)
d$M <- standardize(d$Marriage)
d$A <- standardize(d$MedianAgeMarriage)
d$S <- d$South
mH4 <- quap(
alist(
D ~ dnorm(mu, sigma),
mu <- a + bA*A + bM*M + bS*S,
a ~ dnorm(0, 0.2),
c(bA, bM, bS) ~ dnorm(0, 0.5),
sigma ~ dexp(1)
), data=d
)
precis(mH4)
posterior <- extract.samples(mH4)
posterior
dens(posterior$bS)
